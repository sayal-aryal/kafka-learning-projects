#spring.application.name=ProductsMicroservice
server.port=0

#To specify the bootstrap server
spring.kafka.producer.bootstrap-servers=[::1]:9092 , [::1]:9094
#spring.kafka.producer.bootstrap-servers=localhost:9092 , localhost:9094
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#Producers waits the acks from all the insync replicas
spring.kafka.producer.acks=all
#number of times kafka tries to send message to kafka broker if it fails to send the first time.
#spring.kafka.producer.retries=10
#retries are make in regular intervals which are controlled by the following properties. It is a amount of time that a producer waits before attempting to retry fails request
#spring.kafka.producer.properties.retry.backoff.ms=1000

# ----Rather than using the above two configuration kafka documentation recommend to use below three command ---
#Amount to time that a producer will wait for response from all the replicas after sending a message.This is the maximum amount of time producer allowed to wait until a entire send operation is complete including retries operation
spring.kafka.producer.properties.delivery.timeout.ms = 120000

#The value of above command should be greater than the sum of below two command.
#This is the buffering time.I am setting up it to zero because the message is sent as soon as one message is received.
spring.kafka.producer.properties.linger.ms=0 
#Set the maximum time that the producer is wait for response from broker after sending a message
spring.kafka.producer.properties.request.timeout.ms=30000

#default value is true but also it is recommended to add explicitly if you want your producer to be idempotence. Also need producer.acks=all to make idempotence
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5
